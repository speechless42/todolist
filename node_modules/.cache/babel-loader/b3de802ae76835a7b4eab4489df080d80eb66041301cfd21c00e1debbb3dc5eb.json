{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createStore } from 'vuex';\nconst store = createStore({\n  state() {\n    return {\n      data: \"\",\n      todoThings: []\n    };\n  },\n  getters: {\n    getalreadtdone(state) {\n      console.log(state.todoThings.filter(item => {\n        console.log(item);\n      }));\n      return state.todoThings.filter(item => {\n        console.log(item);\n      });\n    },\n    notyetdone(state) {\n      console.log(state.todoThings.filter(item => {\n        item.isdoing == false;\n      }));\n      return state.todoThings.filter(item => {\n        item.isdoing == false;\n      });\n    }\n  },\n  mutations: {\n    sendTodo(state, params) {\n      console.log(params);\n      state.todoThings.push(params);\n    },\n    deleteThings(state, params) {\n      state.todoThings.splice(params, 1);\n    },\n    completeThings(state, params) {\n      state.todoThings[params].isdoing = true;\n    }\n  },\n  actions: {},\n  modules: {}\n});\nexport default store;","map":{"version":3,"names":["createStore","store","state","data","todoThings","getters","getalreadtdone","console","log","filter","item","notyetdone","isdoing","mutations","sendTodo","params","push","deleteThings","splice","completeThings","actions","modules"],"sources":["D:/todolist/todo-project/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\n\nconst store = createStore({\n  state(){\n    return{\n      data:\"\",\n      todoThings:[]\n    }\n  },\n  getters: {\n    getalreadtdone(state){\n      console.log(state.todoThings.filter((item) =>{console.log(item)}))\n      return state.todoThings.filter((item) =>{console.log(item)});\n    },\n    notyetdone(state){\n      console.log(state.todoThings.filter((item) =>{item.isdoing == false}))\n      return state.todoThings.filter((item) =>{item.isdoing == false})\n    }\n  },\n  mutations: {\n    sendTodo(state,params) {\n      console.log(params)\n      state.todoThings.push(params)\n    },\n    deleteThings(state,params){\n      state.todoThings.splice(params,1)\n    },\n    completeThings(state,params){\n      state.todoThings[params].isdoing = true;\n    }\n  },\n  actions: {\n  },\n  modules: {\n  }\n})\nexport default store\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,MAAM;AAElC,MAAMC,KAAK,GAAGD,WAAW,CAAC;EACxBE,KAAKA,CAAA,EAAE;IACL,OAAM;MACJC,IAAI,EAAC,EAAE;MACPC,UAAU,EAAC;IACb,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,cAAcA,CAACJ,KAAK,EAAC;MACnBK,OAAO,CAACC,GAAG,CAACN,KAAK,CAACE,UAAU,CAACK,MAAM,CAAEC,IAAI,IAAI;QAACH,OAAO,CAACC,GAAG,CAACE,IAAI,CAAC;MAAA,CAAC,CAAC,CAAC;MAClE,OAAOR,KAAK,CAACE,UAAU,CAACK,MAAM,CAAEC,IAAI,IAAI;QAACH,OAAO,CAACC,GAAG,CAACE,IAAI,CAAC;MAAA,CAAC,CAAC;IAC9D,CAAC;IACDC,UAAUA,CAACT,KAAK,EAAC;MACfK,OAAO,CAACC,GAAG,CAACN,KAAK,CAACE,UAAU,CAACK,MAAM,CAAEC,IAAI,IAAI;QAACA,IAAI,CAACE,OAAO,IAAI,KAAK;MAAA,CAAC,CAAC,CAAC;MACtE,OAAOV,KAAK,CAACE,UAAU,CAACK,MAAM,CAAEC,IAAI,IAAI;QAACA,IAAI,CAACE,OAAO,IAAI,KAAK;MAAA,CAAC,CAAC;IAClE;EACF,CAAC;EACDC,SAAS,EAAE;IACTC,QAAQA,CAACZ,KAAK,EAACa,MAAM,EAAE;MACrBR,OAAO,CAACC,GAAG,CAACO,MAAM,CAAC;MACnBb,KAAK,CAACE,UAAU,CAACY,IAAI,CAACD,MAAM,CAAC;IAC/B,CAAC;IACDE,YAAYA,CAACf,KAAK,EAACa,MAAM,EAAC;MACxBb,KAAK,CAACE,UAAU,CAACc,MAAM,CAACH,MAAM,EAAC,CAAC,CAAC;IACnC,CAAC;IACDI,cAAcA,CAACjB,KAAK,EAACa,MAAM,EAAC;MAC1Bb,KAAK,CAACE,UAAU,CAACW,MAAM,CAAC,CAACH,OAAO,GAAG,IAAI;IACzC;EACF,CAAC;EACDQ,OAAO,EAAE,CACT,CAAC;EACDC,OAAO,EAAE,CACT;AACF,CAAC,CAAC;AACF,eAAepB,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}